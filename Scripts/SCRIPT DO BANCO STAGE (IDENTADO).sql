/* CRIANDO O BANCO DE DADOS DA ÁREA DE STAGE */

CREATE DATABASE CLUBE_STAGE
GO
/* CONECTANDO-SE AO BANCO */

USE CLUBE_STAGE
GO

/* CRIANDO AS TABELAS COM BASE NO QUE ESTÁ NA MODELAGEM LÓGICA */

CREATE TABLE ST_INSCRITOS (
	IDINSCRITO 					INT 					DEFAULT NULL
	, NOME 						VARCHAR(100) 			DEFAULT NULL
	, SEXO 						VARCHAR(20) 			DEFAULT NULL
	, IDADE 					INT						DEFAULT NULL
	, EMAIL 					VARCHAR(100) 			DEFAULT NULL
	, SOCIO						VARCHAR(100)            DEFAULT NULL
	, RUA						VARCHAR(150)			DEFAULT NULL
	, BAIRRO					VARCHAR(100)			DEFAULT NULL
	, CIDADE					VARCHAR(100)			DEFAULT NULL
	, ESTADO					VARCHAR(100)			DEFAULT NULL 
	, FAIXA_ETARIA				VARCHAR(100)	        DEFAULT NULL 
	, PROGRAMA_MKT				VARCHAR(100)		    DEFAULT NULL
)
GO


CREATE TABLE ST_FUNCIONARIOS (
	IDFUNCIONARIO 				INT 					DEFAULT NULL
	, NOME 						VARCHAR(100) 			DEFAULT NULL
	, SEXO 						VARCHAR(20) 			DEFAULT NULL
	, NASCIMENTO 				DATE					DEFAULT NULL
	, DEPARTAMENTO				VARCHAR(25) 			DEFAULT NULL
	, RUA						VARCHAR(150)			DEFAULT NULL
	, BAIRRO					VARCHAR(100)			DEFAULT NULL
	, CIDADE					VARCHAR(100)			DEFAULT NULL
	, ESTADO					VARCHAR(100)			DEFAULT NULL
)
GO

CREATE TABLE ST_ATIVIDADES (
	IDATIVIDADE 				INT 					DEFAULT NULL
	, ATIVIDADE 				VARCHAR(70) 			DEFAULT NULL
	, IDADE_MINIMA				INT						DEFAULT NULL 
)
GO

CREATE TABLE ST_FATO (
	ID_INSCRITO					INT 					DEFAULT NULL
	, ID_ATIVIDADE				INT						DEFAULT NULL
	, ID_FUNCIONARIO			INT						DEFAULT NULL
	, DATA 						DATE					DEFAULT NULL
	, VALOR 					NUMERIC(10,2) 			DEFAULT NULL
	, DESCONTO					NUMERIC(10,2)			DEFAULT NULL
	, DESCONTO_ANIVERSARIO      NUMERIC(10,2)			DEFAULT NULL
)
GO
-------------------------------------------------------------------------------
/* SELECTS DE INSERTS*/ 

INSERT INTO CLUBE_STAGE.dbo.ST_INSCRITOS
SELECT 	    I.IDINSCRITO
	        , I.NOME
			, I.SEXO
			, I.NASCIMENTO 
			, I.EMAIL 
			, E.RUA
			, E.BAIRRO
			, E.CIDADE
			, E.ESTADO
			, I.SOCIO 
FROM 	    CLUBE_OLTP.dbo.INSCRITOS                I
INNER  JOIN CLUBE_OLTP.dbo.ENDERECOS                E
  ON I.IDINSCRITO = E.ID_INSCRITO 
GO 
-----------------------------------------
INSERT INTO CLUBE_STAGE.dbo.ST_FUNCIONARIOS
SELECT 	    F.IDFUNCIONARIO
	        , F.NOME
			, F.SEXO
			, F.NASCIMENTO 
			, D.DEPARTAMENTO 
			, EF.RUA
			, EF.BAIRRO
			, EF.CIDADE
			, EF.ESTADO
FROM 	    CLUBE_OLTP.dbo.FUNCIONARIOS             F            
INNER  JOIN CLUBE_OLTP.dbo.DEPARTAMENTOS            D
  ON F.ID_DEPARTAMENTO = D.IDDEPARTAMENTO
INNER  JOIN CLUBE_OLTP.dbo.ENDERECOS_FUNCIONARIOS   EF
  ON F.IDFUNCIONARIO = EF.ID_FUNCIONARIO
GO 
-----------------------------------------
INSERT INTO CLUBE_STAGE.dbo.ST_ATIVIDADES
SELECT 	    A.IDATIVIDADE
	        , A.ATIVIDADE
			, CASE IDATIVIDADE
			WHEN 1 THEN 6
			WHEN 2 THEN 12
			WHEN 3 THEN 15
			WHEN 4 THEN 7
			WHEN 5 THEN 4
			WHEN 6 THEN 5
			END AS 'IDADE_MINIMA'
FROM 	    CLUBE_OLTP.dbo.ATIVIDADES              A
GO 
---------------------------------------------
/* SELECTS TRATADOS */

INSERT INTO CLUBE_STAGE.dbo.ST_INSCRITOS
SELECT   I.IDINSCRITO
         , I.NOME 
		 ,CASE I.SEXO
		WHEN 'M' THEN 'Masculino'
		WHEN 'F' THEN 'Feminino'
		END AS SEXO
	     , (0+ FORMAT(GETDATE(),'yyyyMMdd') - FORMAT(I.NASCIMENTO,'yyyyMMdd'))  /10000 AS IDADE 
		 , ISNULL(I.EMAIL, 'Não possui') AS EMAIL
		 , I.SOCIO
		 , E.RUA
		 , E.BAIRRO 
		 , E.CIDADE
		 , E.ESTADO
		 ,   CASE WHEN (0+ FORMAT(GETDATE(),'yyyyMMdd') - FORMAT(I.NASCIMENTO,'yyyyMMdd'))  /10000 < 18 THEN 'MENOR DE 18 ANOS'
       WHEN (0+ FORMAT(GETDATE(),'yyyyMMdd') - FORMAT(I.NASCIMENTO,'yyyyMMdd'))  /10000 BETWEEN 18 AND 30 THEN  '18 - 30 ANOS'
	   WHEN (0+ FORMAT(GETDATE(),'yyyyMMdd') - FORMAT(I.NASCIMENTO,'yyyyMMdd'))  /10000 BETWEEN 31 AND 40 THEN  '31 - 40 ANOS'
	   WHEN (0+ FORMAT(GETDATE(),'yyyyMMdd') - FORMAT(I.NASCIMENTO,'yyyyMMdd'))  /10000 BETWEEN 41 AND 50 THEN  '41 - 50 ANOS'
	   WHEN (0+ FORMAT(GETDATE(),'yyyyMMdd') - FORMAT(I.NASCIMENTO,'yyyyMMdd'))  /10000 BETWEEN 51 AND 65 THEN  '51 - 65 ANOS'
       ELSE  '+65 ANOS' END AS 'FAIXA ETÁRIA'
	     , CASE WHEN (0+ FORMAT(GETDATE(),'yyyyMMdd') - FORMAT(I.NASCIMENTO,'yyyyMMdd'))  /10000 < 18 AND SEXO = 'M' THEN 'CLIENTE A'
	   WHEN (0+ FORMAT(GETDATE(),'yyyyMMdd') - FORMAT(I.NASCIMENTO,'yyyyMMdd'))  /10000 BETWEEN 18 AND 50 AND SEXO = 'M' THEN 'CLIENTE C'
	   WHEN (0+ FORMAT(GETDATE(),'yyyyMMdd') - FORMAT(I.NASCIMENTO,'yyyyMMdd'))  /10000 BETWEEN 18 AND 45 AND SEXO = 'F' THEN 'CLIENTE D'
	   ELSE 'CLIENTE Z' END AS 'PROGRAMA_MKT'
FROM CLUBE_OLTP.dbo.INSCRITOS                     I
INNER JOIN CLUBE_OLTP.dbo.ENDERECOS               E
  ON E.ID_INSCRITO = I.IDINSCRITO
GO
-------------------------------

-- SELECT DE FAIXA ETÁRIA, PEGUEI DA INTERNET; FUNCIONA!!!

SELECT 
  CASE WHEN AGE < 18 THEN 'MENOR DE 18 ANOS'
       WHEN AGE BETWEEN 18 AND 30 THEN  '18 - 30 ANOS'
	   WHEN AGE BETWEEN 31 AND 40 THEN  '31 - 40 ANOS'
	   WHEN AGE BETWEEN 41 AND 50 THEN  '41 - 50 ANOS'
	   WHEN AGE BETWEEN 51 AND 65 THEN  '51 - 65 ANOS'
       ELSE  '+65 ANOS' END AS 'FAIXA ETÁRIA',
  COUNT(*) AS 'TOTAL'
FROM (SELECT DATEDIFF(yy, NASCIMENTO, GETDATE()) AS AGE FROM ST_INSCRITOS) I
GROUP BY CASE WHEN AGE < 18 THEN 'MENOR DE 18 ANOS'
   WHEN AGE BETWEEN 18 AND 30 THEN  '18 - 30 ANOS'
	   WHEN AGE BETWEEN 31 AND 40 THEN  '31 - 40 ANOS'
	   WHEN AGE BETWEEN 41 AND 50 THEN  '41 - 50 ANOS'
	   WHEN AGE BETWEEN 51 AND 65 THEN  '51 - 65 ANOS'
       ELSE  '+65 ANOS' END
GO
/* CÓDIGO QUE ACHEI NA INTERNET */
--------------------------------------------------------------------------------------------------------
SELECT [Age] = (0+ FORMAT(GETDATE(),'yyyyMMdd') - FORMAT(DateOfBirth,'yyyyMMdd') ) /10000 -- CÓDIGO DE IDADE NOS DIAS ATUAIS!
---------------------------------------------------------------------------------------------------------
/* então, o negócio é só pegar a tabela que tem os registros dos acontecimentos e fazer os joins com as dm's do stage */

/* AGORA VOU TENTAR CRIAR O SELECT DA FATO! */

INSERT INTO CLUBE_STAGE.dbo.ST_FATO
SELECT   R.ID_INSCRITO 
		 , R.ID_ATIVIDADE 
		 , R.ID_FUNCIONARIO 
		 , R.DATA
		 , CASE WHEN I.SOCIO = 'S' THEN A.VALOR 
		   WHEN I.SOCIO = 'N' THEN A.VALOR_SOCIO 
		   END AS VALOR
		 , CAST( ROUND(1 - VALOR_SOCIO / VALOR,2) AS FLOAT) AS DESCONTO
		 , CASE WHEN DATEPART(MONTH, I.NASCIMENTO) = DATEPART(MONTH, R.DATA) AND I.SOCIO = 'S' THEN  A.VALOR_SOCIO * 0.75
		   WHEN DATEPART(MONTH, I.NASCIMENTO) = DATEPART(MONTH, R.DATA) THEN A.VALOR * 0.90
		   ELSE (CASE WHEN I.SOCIO = 'S' THEN A.VALOR 
		   WHEN I.SOCIO = 'N' THEN A.VALOR_SOCIO 
		   END)
		   END AS DESCONTO_ANIVERSARIO
FROM CLUBE_OLTP.dbo.REGISTROS                   R
INNER JOIN CLUBE_OLTP.dbo.INSCRITOS             I
  ON R.ID_INSCRITO = I.IDINSCRITO
INNER JOIN CLUBE_OLTP.dbo.ATIVIDADES            A
  ON R.ID_ATIVIDADE = A.IDATIVIDADE
GO


/* a outra coluna vai ser o seguinte, se o inscrito fizer aniversário no mês de 
análise e se ele for sócio, ele ganha 25% de desconto no que ele já paga e se o 
cara não for sócio, recebe um desconto de 10% */ 





--------------------------------------------------------------------------------------------------------------
/* O CÓDIGO ABAIXO FOI CRIADO PELO TULIO. ELE NÃO QUER QUE EU APLIQUE ISSO AO PROJETO,
MAS O DEIXOU PARA QUE EU APRENDESSE NO FUTURO SOBRE CHAVE COMPOSTA E O QUE HAVIA SIDO
PROPOSTO AQUI (CRIAR A COLUNA TURNO E TRATAR ESSA SITUAÇÃO, SEM HAVER TAIS DADOS NO
AMBIENTE OLTP). */

/*--Cria uma tabela temporária com os possíveis turnos
select	1				as idturno
		, 'Noite'		as dsc_turno
into	#tmp_turno

union all

select	2				as idturno
		, 'Tarde'		as dsc_turno

union all

select	3				as idturno
		, 'Manhã'		as dsc_turno

---Faz a junção para o turno
SELECT	CAST( IDATIVIDADE AS VARCHAR ) + CAST( IDTURNO AS VARCHAR )	AS IDATIVIDADE_TURNO
		, IDATIVIDADE
		, ATIVIDADE
		, IDTURNO
		, DSC_TURNO
FROM	ATIVIDADES			A
CROSS	JOIN #TMP_TURNO		B
ORDER	BY 2 */


